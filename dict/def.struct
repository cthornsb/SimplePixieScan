# definitions.struct
#
# This file is used for declaring various data types for
#  .root file output from RootPixieScan. This file is intended
#  to be read by the executable StructFileGenerator. That program
#  will automatically generate the following structure files...
#
#   Structures.cpp
#   Structures.h
#   LinkDef.h
#
# These files will be used in the generation of a root dictionary.
#
# Valid types:
#  char, short, int, float, double, and any other standard c++ type
#  Types beginning with 'u_' will be unsigned (e.g. u_int	= unsigned int)
#  Types beginning with 'vector:' will be a vector of that type (e.g. vector:int = std::vector<int>)
#
# Special flags:
#  Variable names ending with '_mult' are considered as a multiplicity variable 
#   and are incremented each time the ::Append method is called. These variables
#   are also not included to the call to ::Append.
#  Variable names ending with '_wave' are considered as trace variables. This
#   means that they will be included in the Waveform class instead of Structure.
#
# Cory R. Thornsberry
# Last updated: April 26th, 2015

#####################################################################
# Trigger
#####################################################################
# Class name
BEGIN_CLASS	Trigger

# Short class description
SHORT	Trigger detector data structure

# Longer class description
LONG	Structure for detectors of type "trigger"

# Data types and names
# type	name	description
BEGIN_TYPES
vector:double	trigger_time	The raw pixie16 system clock time.
vector:double	trigger_tqdc	The energy computed from the trace.
vector:double	trigger_phase	The trace offset in ns.
u_int	trigger_mult	Multiplicity of the trigger detector.

# Trace output data types and names (must end with _wave)
# type	name	description
vector:int	trigger_wave	Integer vector for trigger pulses.
END_TYPES

# End this class
END_CLASS

#####################################################################
# Vandle
#####################################################################
# Class name
BEGIN_CLASS	Vandle

# Short class description
SHORT	Vandle bar data structure

# Longer class description
LONG	Structure for detectors of type "vandlesmall" or "vandlebig"

# Data types and names
# type	name	description
BEGIN_TYPES
vector:double	vandle_ltdiff	The time of flight of the particle detected by vandle.
vector:double	vandle_rtdiff	The time of flight of the particle detected by vandle.
vector:double	vandle_ltqdc	The left pmt energy computed from the trace.
vector:double	vandle_rtqdc	The right pmt energy computed from the trace.
vector:double	vandle_lphase	The left pmt trace offset in ns.
vector:double	vandle_rphase	The right pmt trace offset in ns.
vector:int	vandle_loc	Detector location (ID)
u_int	vandle_mult	Multiplicity of the vandle events.

# Trace output data types and names (must end with _wave)
# type	name	description
vector:int	vandle_left_wave	Integer vector for left vandle pulse.
vector:int	vandle_right_wave	Integer vector for right vandle pulse.
END_TYPES

# End this class
END_CLASS

#####################################################################
# Phoswich
#####################################################################
# Class name
BEGIN_CLASS	Phoswich

# Short class description
SHORT	Data structure for phoswich detectors

# Longer class description
LONG	Structure for detectors of type "phoswich"

# Data types and names
# type	name	description
BEGIN_TYPES
vector:double	phoswich_time	The raw pixie16 system clock time.
vector:double	phoswich_ftqdc	The integral of the fast portion of the pulse.
vector:double	phoswich_stqdc	The integral of the slow portion of the pulse.
vector:double	phoswich_fAmp	The amplitude of the landau function for the fast pulse.
vector:double	phoswich_fMPV	The most probable value of the landau function for the fast pulse.
vector:double	phoswich_fSigma	The sigma (roughly the width) of the landau function for the fast pulse.
vector:double	phoswich_fChi2	The chi^2/NDF for the fast pulse fit.
u_int	phoswich_mult	Multiplicity of the phoswich events.

# Trace output data types and names (must end with _wave)
# type	name	description
vector:int	phoswich_wave	The phoswich trace.
END_TYPES

# End this class
END_CLASS

#####################################################################
# LiquidBar
#####################################################################
# Class name
BEGIN_CLASS	LiquidBar

# Short class description
SHORT	LiquidBar bar data structure

# Longer class description
LONG	Structure for detectors of type "liquidbar"

# Data types and names
# type	name	description
BEGIN_TYPES
vector:double	liquidbar_ltdiff	The time of flight of the particle detected by liquidbar.
vector:double	liquidbar_rtdiff	The time of flight of the particle detected by liquidbar.
vector:double	liquidbar_stqdc	The short integral computed from both pmt traces.
vector:double	liquidbar_ltqdc	The long integral computed from both pmt traces.
vector:double	liquidbar_lphase	The left pmt trace offset in ns.
vector:double	liquidbar_rphase	The right pmt trace offset in ns.
vector:int	liquidbar_loc	Detector location (ID)
u_int	liquidbar_mult	Multiplicity of the liquidbar events.

# Trace output data types and names (must end with _wave)
# type	name	description
vector:int	liquid_left_wave	Integer vector for left liquidbar pulse.
vector:int	liquid_right_wave	Integer vector for right liquidbar pulse.
END_TYPES

# End this class
END_CLASS

#####################################################################
# Liquid
#####################################################################
# Class name
BEGIN_CLASS	Liquid

# Short class description
SHORT	Liquid detector data structure

# Longer class description
LONG	Structure for detectors of type "liquid"

# Data types and names
# type	name	description
BEGIN_TYPES
vector:double	liquid_tdiff	The time of flight of the particle detected by the detector.
vector:double	liquid_stqdc	The pmt short integral computed from the trace.
vector:double	liquid_ltqdc	The pmt long integral computed from the trace.
vector:double	liquid_phase	The pmt trace offset in ns.
vector:int	liquid_loc	Detector location (ID)
u_int	liquid_mult	Multiplicity of the liquid events.

# Trace output data types and names (must end with _wave)
# type	name	description
vector:int	liquid_wave	Integer vector for liquid pulse.
END_TYPES

# End this class
END_CLASS

#####################################################################
# Generic
#####################################################################
# Class name
BEGIN_CLASS	Generic

# Short class description
SHORT	Generic data structure

# Longer class description
LONG	Structure for detectors of type "generic"

# Data types and names
# type	name	description
BEGIN_TYPES
vector:double	generic_tdiff	The time of flight of the particle detected by vandle.
vector:double	generic_tqdc	The energy computed from the trace.
vector:double	generic_phase	The trace offset in ns.
vector:int	generic_loc	Detector location (ID)
u_int	generic_mult	Multiplicity of the generic type events.

# Trace output data types and names (must end with _wave)
# type	name	description
vector:int	generic_wave	Integer vector for generic pulses.
END_TYPES

# End this class
END_CLASS

#####################################################################
# Logic
#####################################################################
# Class name
BEGIN_CLASS	Logic

# Short class description
SHORT	Logic data structure

# Longer class description
LONG	Track the number of occurances of logic signals.

# Data types and names
# type	name	description
BEGIN_TYPES
vector:int	logic_loc	Signal location (ID).
u_int	logic_mult	Multiplicity of the logic events.
END_TYPES

# End this class
END_CLASS
