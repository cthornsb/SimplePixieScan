# definitions.struct
#
# This file is used for declaring various data types for
#  .root file output from RootPixieScan. This file is intended
#  to be read by the executable StructFileGenerator. That program
#  will automatically generate the following structure files...
#
#   Structures.cpp
#   Structures.h
#   LinkDef.h
#
# These files will be used in the generation of a root dictionary.
#
# Valid types:
#  char, short, int, float, double, and any other standard c++ type
#  Types beginning with 'u_' will be unsigned (e.g. u_int	= unsigned int)
#  Types beginning with 'vector:' will be a vector of that type (e.g. vector:int = std::vector<int>)
#
# Special flags:
#  Variable names ending with '_mult' are considered as a multiplicity variable 
#   and are incremented each time the ::Append method is called. These variables
#   are also not included to the call to ::Append.
#  Variable names ending with '_wave' are considered as trace variables. This
#   means that they will be included in the Waveform class instead of Structure.
#
# Cory R. Thornsberry
# Last updated: August 25th, 2016

#####################################################################
# Trigger
#####################################################################
# Class name
BEGIN_CLASS	Trigger

# Short class description
SHORT	Trigger detector data structure

# Longer class description
LONG	Structure for detectors of type "trigger"

# Data types and names
# type	name	description
BEGIN_TYPES
vector:double	tqdc	The energy computed from the trace.
vector:double	time	The raw pixie16 system clock time.
vector:double	phase	The trace offset in ns.
u_int	mult	Multiplicity of the trigger detector.
END_TYPES

# End this class
END_CLASS

#####################################################################
# TraceData
#####################################################################
# Class name
BEGIN_CLASS	Trace

# Short class description
SHORT	Trace data structure

# Longer class description
LONG	Structure for storing pixie trace information

# Data types and names
# type	name	description
BEGIN_TYPES
vector:double	tdiff	The time difference between this detector and the start.
vector:float	phase	The offset phase of the pulse.
vector:float	baseline	The averaged baseline of the pulse.
vector:float	stddev	The standard deviation of the baseline.
vector:float	maximum	The baseline corrected maximum ADC value of the pulse.
vector:float	tqdc	The integrated trace qdc of the pulse.
vector:u_short	energy	The 15-bit trapezoidal filter energy from onboard.
vector:u_short	adcMax	The 12 or 14-bit ADC trace maximum (not baseline corrected).
vector:int	maxbin	The time bin where the ADC max occurs.
vector:int	loc	Detector location (ID).
u_int	mult	Multiplicity.
END_TYPES

# End this class
END_CLASS

#####################################################################
# Vandle
#####################################################################
# Class name
BEGIN_CLASS	Vandle

# Short class description
SHORT	Vandle bar data structure

# Longer class description
LONG	Structure for detectors of type "vandlesmall" or "vandlebig"

# Data types and names
# type	name	description
BEGIN_TYPES
vector:double	tqdc	The total light response (sqrt(l*r)).
vector:double	r	The flight path of the neutron corrected for bar position.
vector:double	theta	The polar angle of the neutron with respect to the beam axis.
vector:double	phi	The azimuthal angle of the neutron about the beam axis.
vector:double	ctof	The corrected time of flight of the particle detected by vandle.
vector:double	energy	Neutron energy calculated from the tof.
vector:int	loc	Detector location (ID)
u_int	mult	Multiplicity of the vandle events.
END_TYPES

# End this class
END_CLASS

#####################################################################
# Phoswich
#####################################################################
# Class name
BEGIN_CLASS	Phoswich

# Short class description
SHORT	Data structure for phoswich detectors

# Longer class description
LONG	Structure for detectors of type "phoswich"

# Data types and names
# type	name	description
BEGIN_TYPES
vector:double	ftqdc	The integral of the fast portion of the pulse.
vector:double	stqdc	The integral of the slow portion of the pulse.
vector:double	fAmp	The ADC amplitude of the fast pulse.
vector:double	time	The raw pixie16 system clock time.
vector:double	phase	The trace offset in ns.
u_int	mult	Multiplicity of the phoswich events.
END_TYPES

# End this class
END_CLASS

#####################################################################
# LiquidBar
#####################################################################
# Class name
BEGIN_CLASS	LiquidBar

# Short class description
SHORT	LiquidBar bar data structure

# Longer class description
LONG	Structure for detectors of type "liquidbar"

# Data types and names
# type	name	description
BEGIN_TYPES
vector:double	stqdc	The short integral computed from both pmt traces.
vector:double	ltqdc	The long integral computed from both pmt traces.
vector:double	r	The flight path of the neutron corrected for bar position.
vector:double	theta	The polar angle of the neutron with respect to the beam axis.
vector:double	phi	The azimuthal angle of the neutron about the beam axis.
vector:double	ctof	The corrected time of flight of the particle detected by the liquid bar.
vector:double	energy	Neutron energy calculated from the corrected tof.
vector:int	loc	Detector location (ID)
u_int	mult	Multiplicity of the liquidbar events.
END_TYPES

# End this class
END_CLASS

#####################################################################
# Liquid
#####################################################################
# Class name
BEGIN_CLASS	Liquid

# Short class description
SHORT	Liquid detector data structure

# Longer class description
LONG	Structure for detectors of type "liquid"

# Data types and names
# type	name	description
BEGIN_TYPES
vector:double	stqdc	The pmt short integral computed from the trace.
vector:double	ltqdc	The pmt long integral computed from the trace.
vector:double	tof	The time of flight of the particle detected by the detector.
vector:double	energy	Neutron energy calculated from the tof.
vector:int	loc	Detector location (ID)
u_int	mult	Multiplicity of the liquid events.
END_TYPES

# End this class
END_CLASS

#####################################################################
# Generic
#####################################################################
# Class name
BEGIN_CLASS	Generic

# Short class description
SHORT	Generic data structure

# Longer class description
LONG	Structure for detectors of type "generic"

# Data types and names
# type	name	description
BEGIN_TYPES
vector:double	tqdc	The energy computed from the trace.
vector:double	tof	The time of flight of the particle detected by the detector.
vector:int	loc	Detector location (ID)
u_int	mult	Multiplicity of the generic type events.
END_TYPES

# End this class
END_CLASS

#####################################################################
# Hagrid
#####################################################################
# Class name
BEGIN_CLASS	Hagrid

# Short class description
SHORT	Hagrid gamma data structure

# Longer class description
LONG	Structure for hagrid (LaBr crystal) detectors.

# Data types and names
# type	name	description
BEGIN_TYPES
vector:double	energy	The energy output of the pixie energy filter.
vector:double	tof	The time of flight of the particle detected by the detector.
vector:int	loc	Detector location (ID)
u_int	mult	Multiplicity of the generic type events.
END_TYPES

# End this class
END_CLASS

#####################################################################
# Logic
#####################################################################
# Class name
BEGIN_CLASS	Logic

# Short class description
SHORT	Logic data structure

# Longer class description
LONG	Track the number of occurances of logic signals.

# Data types and names
# type	name	description
BEGIN_TYPES
vector:double	time	The time of arrival of the logic signal.
vector:int	loc	Signal location (ID).
u_int	mult	Multiplicity of the logic events.
END_TYPES

# End this class
END_CLASS
